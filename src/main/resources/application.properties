#Global configuration
#définir un nom à l?application
spring.application.name=rdv-api


#Tomcat configuration
#pour ne pas être sur le port par défaut 8080
server.port=9000

#Log level configuration

#par défaut, seules les traces en ERROR s?affichent.
# L?idée est simple : réduire les affichages dans la console de toutes les "3rd party"
logging.level.root=ERROR

#pour ce qui est de notre code, on est en INFO pour avoir du détail
logging.level.com.rdvmedic=INFO

#permet de voir dans la console l?URL jdbc de la base H2
logging.level.org.springframework.boot.autoconfigure.h2=INFO

#permet de voir dans la console le port utilisé par Tomcat au démarrage
logging.level.org.springframework.boot.web.embedded.tomcat=INFO

# Assure que data.sql est exécuté APRES la création des tables
#garantit que .sql est exécuté même si ce n?est pas une vraie base persistante.
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

#H2 Configuration
#correspond à la propriété pour activité de la console H2
spring.h2.console.enabled=true

# Hibernate gère la création des tables
spring.jpa.hibernate.ddl-auto=create

# Affiche les requêtes SQL générées par Hibernate
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
